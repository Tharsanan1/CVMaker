{"version":3,"sources":["utils/Types.jsx","Components/CV.jsx","utils/SentenceMaker.js","Components/Sentence.jsx","static/cvJson.js","Components/DashBoard.jsx","App.js","serviceWorker.js","index.js"],"names":["type","TEXT","BULLET_TEXT","SENTENCE","BULLET_PARA","ctx","document","createElement","getContext","window","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","fillText","color","fontSize","fontCat","fontStyle","text","x","y","context","isXCentered","fillStyle","font","textWidth","measureText","width","Math","floor","innerWidth","addElement","element","Types","payload","bulletColor","centerX","radius","centerY","beginPath","arc","PI","fill","fillCircle","CV","canvas","React","createRef","state","height","getCursorPosition","bind","props","prevProps","prevState","this","current","sizeW","sizeH","style","scale","clearRect","elements","forEach","event","addEventListener","e","rect","getBoundingClientRect","clientX","left","clientY","top","mouseClickedOn","ref","border","Component","makeBulletSentences","sentences","lineHeigth","sentenceHeigth","sentenceArr","split","lastY","push","sentence","lines","count","makeBulletSentence","length","DIRECTION","SIZE","options","Sentence","handleChangeComplete","setState","hex","updatePayload","index","handlePopoverClose","anchorEl","handleClick","currentTarget","stepSize","handleStepClick","handleStepSizeChange","handleSentenceChange","handleFontSizeChange","handleFontSizeClick","handleLineHeightClick","target","value","direction","action","margin","position","reff","className","onClick","Popover","id","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","onChangeComplete","class","onChange","aria-label","aria-describedby","_onSelect","placeholder","right","delete","elementBlackListedKeys","DashBoard","cvJson","jsonObj","exportCV","console","log","obj","stringified","JSON","stringify","key","includes","navigator","clipboard","textArea","body","appendChild","focus","select","msg","execCommand","err","error","removeChild","fallbackCopyTextToClipboard","writeText","then","alert","copyTextToClipboard","findIndex","splice","closerElement","minDistance","distance","sqrt","pow","scrollIntoView","behavior","block","makeSentence","innerHeight","overflowY","reverse","map","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9b095a4e.chunk.js","sourcesContent":["let type = {\n    TEXT : \"TEXT\",\n    BULLET_TEXT : \"BULLET_TEXT\",\n    SENTENCE : \"SENTENCE\",\n    BULLET_PARA : \"BULLET_PARA\"\n}\n\nexport default type;","import React from \"react\";\nimport Types from \"../utils/Types\";\n\nconst WHITE_SPACE = \" \";\nconst DEFAULT_FONT_SIZE = 15;\n\nlet PIXEL_RATIO = (function () {\n    var ctx = document.createElement(\"canvas\").getContext(\"2d\"),\n        dpr = window.devicePixelRatio || 1,\n        bsr = ctx.webkitBackingStorePixelRatio ||\n              ctx.mozBackingStorePixelRatio ||\n              ctx.msBackingStorePixelRatio ||\n              ctx.oBackingStorePixelRatio ||\n              ctx.backingStorePixelRatio || 1;\n\n    return dpr / bsr;\n})();\n\n\nfunction fillText(color, fontSize, fontCat, fontStyle, text, x, y, context, isXCentered) {\n  context.fillStyle = color;\n  let font = \"\";\n  if (fontStyle !== null) {\n    font += fontStyle + WHITE_SPACE;\n  }\n  if (fontSize !== null) {\n    font += fontSize + \"px\" + WHITE_SPACE;\n  }\n  if (fontCat !== null) {\n    font += fontCat;\n  }\n  context.font = font;\n  if(isXCentered){\n    let textWidth = context.measureText(text).width;\n    x = Math.floor((window.innerWidth / 2) - (textWidth / 2));\n  }\n  context.fillText(text, x, y);\n  return context;\n}\n\nfunction fillCircle(centerX, centerY, radius, color, context) {\n  context.beginPath();\n  centerY+=0.5;\n  centerX+=0.5;\n  context.arc(centerX, centerY, radius, 0, 2 * Math.PI, false);\n  context.fillStyle = color;\n  context.fill();\n}\n\nfunction addElement(element, context) {\n  if (element.type === Types.TEXT) {\n    let { color, fontSize, fontCat, fontStyle, text, x, y, isXCentered } = element.payload;\n    if(fontSize === null) {\n        fontSize = DEFAULT_FONT_SIZE;\n    }\n    return fillText(color, fontSize, fontCat, fontStyle, text, x, y, context, isXCentered);\n  }\n  if (element.type === Types.BULLET_TEXT) {\n    let { color, fontSize, fontCat, fontStyle, text, x, y, bulletColor } = element.payload;\n    if(fontSize === null) {\n        fontSize = DEFAULT_FONT_SIZE;\n    }\n    let centerX = Math.floor(x - (fontSize * 0.6));\n    let radius = Math.floor(fontSize * 0.6 / 2);\n    let centerY = Math.floor(y - radius);\n    fillCircle(centerX, centerY, radius, bulletColor, context);\n    return fillText(color, fontSize, fontCat, fontStyle, text, x, y, context, false);\n\n\n  }\n}\n\nclass CV extends React.Component {\n  constructor() {\n    super();\n    this.canvas = React.createRef();\n    this.state = {\n      width: 800,\n      height: 800,\n    };\n    this.getCursorPosition = this.getCursorPosition.bind(this);\n  }\n\n  componentWillReceiveProps(props){\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const canvas = this.canvas.current;\n    const context = canvas.getContext(\"2d\");\n    // Set display size (css pixels).\n    let sizeW = window.innerWidth - 100;\n    const sizeH = Math.floor(sizeW * 1.4);\n    canvas.style.width = sizeW + \"px\";\n    canvas.style.height = sizeH + \"px\";\n\n    // Set actual size in memory (scaled to account for extra pixel density).\n    var scale = window.devicePixelRatio; // <--- Change to 1 on retina screens to see blurry canvas.\n    canvas.width = sizeW * scale;\n    canvas.height = sizeH * scale;\n\n    // Normalize coordinate system to use css pixels.\n    context.scale(scale, scale);\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    //context.setTransform(PIXEL_RATIO, 0, 0, PIXEL_RATIO, 0, 0);\n    this.props.elements.forEach(element => {\n        addElement(element, context);\n    });\n  }\n\n  getCursorPosition(canvas, event) {\n    \n}\n\n  componentDidMount() {\n    const canvas = this.canvas.current;\n\n    canvas.addEventListener('mousedown', (e) => {\n      const rect = canvas.getBoundingClientRect()\n      const x = e.clientX - rect.left\n      const y = e.clientY - rect.top\n      this.props.mouseClickedOn(x,y);\n    })\n\n    const context = canvas.getContext(\"2d\");\n    // Set display size (css pixels).\n    let sizeW = window.innerWidth - 100;\n    const sizeH = Math.floor(sizeW * 1.4);\n    sizeW = sizeW - 100;\n    canvas.style.width = sizeW + \"px\";\n    canvas.style.height = sizeH + \"px\";\n\n    // Set actual size in memory (scaled to account for extra pixel density).\n    var scale = window.devicePixelRatio; // <--- Change to 1 on retina screens to see blurry canvas.\n    canvas.width = sizeW * scale;\n    canvas.height = sizeH * scale;\n\n    // Normalize coordinate system to use css pixels.\n    context.scale(scale, scale);\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    //context.setTransform(PIXEL_RATIO, 0, 0, PIXEL_RATIO, 0, 0);\n    this.props.elements.forEach(element => {\n        addElement(element, context);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <canvas\n          ref={this.canvas}\n          width={this.state.width}\n          height={this.state.height}\n          style={{ border: \"1px solid #000000\" }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CV;\n","import Types from './Types.jsx';\nconst lineSplitter = '*l*';\nconst sentenceSplitter = '*s*';\n\nexport function makeSentence(x, y, sentences, lineHeigth, color, fontSize, fontCat, fontStyle, isXCentered){\n    let lines = sentences.split(lineSplitter);\n    let elements = [];\n    let count = 0;\n    lines.forEach(element => {\n        elements.push({\n            type: Types.TEXT,\n            payload: {\n                color: color,\n                fontSize: fontSize,\n                fontCat: fontCat,\n                fontStyle: fontStyle,\n                text: element,\n                x:x,\n                y:(y+(count*lineHeigth)),\n                isXCentered: isXCentered\n            }\n        });\n        count++;\n    });\n    return elements;\n\n}\n\nfunction makeBulletSentence(x, y, sentence, lineHeigth, color, bulletColor, fontSize, fontCat, fontStyle){\n    let lines = sentence.split(lineSplitter);\n    let elements = [];\n    let count = 0;\n    lines.forEach(element => {\n        if(count == 0){\n            elements.push({\n              type: Types.BULLET_TEXT,\n              payload: {\n                  color:color,\n                  fontSize:fontSize,\n                  fontCat:fontCat,\n                  fontStyle:fontStyle,\n                  text:element,\n                  x:x,\n                  y:y,\n                  bulletColor:bulletColor\n              }\n          \n            });\n        }\n        else{\n            elements.push({\n                type: Types.TEXT,\n                payload: {\n                    color: color,\n                    fontSize: fontSize,\n                    fontCat: fontCat,\n                    fontStyle: fontStyle,\n                    text: element,\n                    x:x,\n                    y:(y+(count*lineHeigth))\n                }\n            });\n        }\n        count++;\n    });\n    return elements;\n\n}\n\nexport function makeBulletSentences(x, y, sentences, lineHeigth, sentenceHeigth, color, bulletColor, fontSize, fontCat, fontStyle){\n    let sentenceArr = sentences.split(sentenceSplitter);\n    let elements = [];\n    let count = 0; \n    let lastY = y;\n    sentenceArr.forEach(element => {\n        elements.push(...makeBulletSentence(x, lastY + sentenceHeigth, element, lineHeigth, color, bulletColor, fontSize, fontCat, fontStyle));\n        // console.log(\"test\" , elements, element)\n        lastY = elements[elements.length-1].payload.y;\n        count++;\n    });\n\n    return elements;\n}\n\n\n// {\n//               type: Types.BULLET_TEXT,\n//               payload: {\n//                   color:\"red\",\n//                   fontSize:40,\n//                   fontCat:\"LatoWeb\",\n//                   fontStyle:\"bold\",\n//                   text:\"Zodiac\",\n//                   x:60,\n//                   y:100,\n//                   bulletColor:\"black\"\n//               }\n//           }","import React from \"react\";\nimport { SketchPicker } from 'react-color';\nimport Popover from \"@material-ui/core/Popover\";\nimport Types from '../utils/Types';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n \nconst DIRECTION = {\n    UP : \"UP\",\n    DOWN : \"DOWN\",\n    RIGHT : \"RIGHT\",\n    LEFT : \"LEFT\",\n    CENTER_X : \"CENTER_X\"\n}\n\nconst SIZE = {\n    INCREASE : \"INCREASE\",\n    DECREASE : \"DECREASE\"\n}\n\nconst options = [\n  'one', 'two', 'three'\n];\n\nexport default class Sentence extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            color: '#fff',\n            anchorEl: null,\n            stepSize: 1\n        };\n        this.handleStepClick = this.handleStepClick.bind(this);\n        this.handleStepSizeChange = this.handleStepSizeChange.bind(this);\n        this.handleSentenceChange = this.handleSentenceChange.bind(this);\n        this.handleFontSizeChange = this.handleFontSizeChange.bind(this);\n        this.handleFontSizeClick = this.handleFontSizeClick.bind(this);\n        this.handleLineHeightClick = this.handleLineHeightClick.bind(this);\n        \n    }\n\n    handleChangeComplete = (color) => {\n        this.setState({ color: color.hex },() => {\n            let payload = this.props.payload;\n            payload.color = color.hex;\n            this.props.updatePayload(this.props.index, payload);\n        });\n    };\n\n    handlePopoverClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleClick = (e) => {\n        this.setState({ anchorEl: e.currentTarget});\n    };\n\n    handleStepSizeChange(e){\n        this.setState({\n            stepSize : e.target.value\n        })\n    }\n\n    handleFontSizeChange(e){\n        let payload = this.props.payload;\n        payload.fontSize = e.target.value;\n        this.props.updatePayload(this.props.index, payload);\n    }\n\n    handleSentenceChange(e){\n        let payload = this.props.payload;\n        payload.sentences = e.target.value;\n        this.props.updatePayload(this.props.index, payload);\n    }\n\n    handleStepClick(direction){\n        let payload = this.props.payload;\n        if(direction === DIRECTION.UP){\n            payload.y = payload.y - +this.state.stepSize;\n        }\n        else if(direction === DIRECTION.DOWN){\n            payload.y = payload.y + +this.state.stepSize;\n        }\n        else if(direction === DIRECTION.RIGHT){\n            payload.x = payload.x + +this.state.stepSize;\n        }\n        else if(direction === DIRECTION.LEFT){\n            payload.x = payload.x - +this.state.stepSize;\n        } \n        else if(direction === DIRECTION.CENTER_X){\n            payload.isXCentered = !payload.isXCentered;\n        }   \n        this.props.updatePayload(this.props.index, payload)\n    }\n\n    handleFontSizeClick(action){\n        if(action === SIZE.INCREASE){\n            this.handleFontSizeChange({\n                target : {\n                    value : this.props.payload.fontSize + 1\n                }\n            });\n        }\n        else if(action === SIZE.DECREASE){\n            this.handleFontSizeChange({\n                target : {\n                    value : this.props.payload.fontSize - 1\n                }\n            });\n        }\n    }\n\n    handleLineHeightClick(action){\n        let payload = this.props.payload;\n        if(action === SIZE.INCREASE){\n            payload.lineHeigth = payload.lineHeigth + 1;\n        }\n        else if(action === SIZE.DECREASE){\n            payload.lineHeigth = payload.lineHeigth - 1;\n        }\n        this.props.updatePayload(this.props.index, payload);\n    }\n\n    render(){\n        return(\n            <div style= {{border: \"10px solid black\", margin: \"10px\", position: \"relative\"}} ref = {this.props.reff}>\n                <button style={{ margin: \"20px\" }} className=\"btn btn-primary\"  onClick={e => this.handleClick(e)}>Pick Color</button>\n                <Popover \n                    id=\"PopOver1\"\n                    open={this.state.anchorEl !== null}\n                    onClose={this.handlePopoverClose}\n                    anchorEl={this.state.anchorEl}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left',\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    >\n                    <SketchPicker\n                        color={ this.state.color }\n                        onChangeComplete={ this.handleChangeComplete }\n                    />\n                </Popover>\n                <div class=\"input-group\" style={{ margin: \"20px\" }}>\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\">Sentence</span>\n                    </div>\n                    <textarea class=\"form-control\" onChange={this.handleSentenceChange} value={this.props.payload.sentences}/>\n                </div>\n                <br/>\n                <div>\n                    <div class=\"input-group input-group-sm mb-3\" style={{ margin: \"20px\" }}>\n                        <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">Font size</span>\n                        </div>\n                        <input type=\"text\"  aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" onChange={this.handleFontSizeChange} value={this.props.payload.fontSize}/>\n                    </div>\n                    <button style={{ margin: \"20px\" }} className=\"btn btn-primary\" onClick={() => {this.handleFontSizeClick(SIZE.INCREASE)}}>Increase</button>\n                    <button style={{ margin: \"20px\" }} className=\"btn btn-primary\" onClick={() => {this.handleFontSizeClick(SIZE.DECREASE)}}>Decrease</button>\n                    \n                    <div class=\"input-group input-group-sm mb-3\" style={{ margin: \"20px\" }}>\n                        <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">Font size</span>\n                        </div>\n                        <input type=\"text\"  aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" onChange={this.handleFontSizeChange} value={this.props.payload.fontSize}/>\n                    </div>\n                    <button style={{ margin: \"20px\" }} className=\"btn btn-primary\" onClick={() => {this.handleLineHeightClick(SIZE.INCREASE)}}>Increase Line Height</button>\n                    <button style={{ margin: \"20px\" }} className=\"btn btn-primary\" onClick={() => {this.handleLineHeightClick(SIZE.DECREASE)}}>Decrease Line Height</button>\n                    \n                    <div style={{ margin: \"20px\" }}>\n                        <Dropdown options={options} onChange={this._onSelect} value={this.props.fontCat} placeholder=\"Select Font\" />\n                    </div>\n                    <br/>\n\n                    <div>\n                        <div class=\"input-group input-group-sm mb-3\" style={{ margin: \"20px\" }}>\n                            <div class=\"input-group-prepend\" >\n                                <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">Step size</span>\n                            </div>\n                            <input type=\"text\"  aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" onChange={this.handleStepSizeChange} value={this.state.stepSize}/>\n                        </div>\n                        \n                        <button style={{ margin: \"20px\" }} className=\"btn btn-primary\" onClick={() => {this.handleStepClick(DIRECTION.UP)}}>UP</button>\n                        <button style={{ margin: \"20px\" }} className=\"btn btn-primary\" onClick={() => {this.handleStepClick(DIRECTION.LEFT)}}>LEFT</button>\n                        <button style={{ margin: \"20px\" }} className=\"btn btn-primary\" onClick={() => {this.handleStepClick(DIRECTION.RIGHT)}}>RIGHT</button>\n                        <button style={{ margin: \"20px\" }} className=\"btn btn-primary\" onClick={() => {this.handleStepClick(DIRECTION.DOWN)}}>DOWN</button>\n                        {Types.SENTENCE === this.props.type ? <button style={{ margin: \"20px\" }} className=\"btn btn-primary\" onClick={() => {this.handleStepClick(DIRECTION.CENTER_X)}}>Center_X</button> : <div/>}\n                    </div>\n                </div>\n\n                <button style={{ margin: \"20px\", position: \"absolute\", top: \"0px\", right: \"0px\" }} className=\"btn btn-danger\" onClick={() => {this.props.delete(this.props.index)}}>Delete</button>\n                    \n            </div>\n        );\n    }\n}","let elements = [{\"id\":0,\"type\":\"SENTENCE\",\"payload\":{\"x\":10,\"y\":200,\"sentences\":\"CrEaTe\",\"lineHeigth\":20,\"color\":\"red\",\"fontSize\":\"100\",\"fontCat\":\"LatoWeb\",\"fontStyle\":\"bold\",\"isXCentered\":false}},{\"id\":1,\"type\":\"SENTENCE\",\"payload\":{\"x\":10,\"y\":267,\"sentences\":\"YoUr\",\"lineHeigth\":20,\"color\":\"#a52d2d\",\"fontSize\":\"80\",\"fontCat\":\"LatoWeb\",\"fontStyle\":\"bold\",\"isXCentered\":false}},{\"id\":2,\"type\":\"SENTENCE\",\"payload\":{\"x\":210,\"y\":266,\"sentences\":\"LoVeLy\",\"lineHeigth\":20,\"color\":\"#0d41f3\",\"fontSize\":\"60\",\"fontCat\":\"LatoWeb\",\"fontStyle\":\"bold\",\"isXCentered\":false}},{\"id\":3,\"type\":\"SENTENCE\",\"payload\":{\"x\":424,\"y\":270,\"sentences\":\"SeNtEnCeS\",\"lineHeigth\":20,\"color\":\"#50f10d\",\"fontSize\":\"80\",\"fontCat\":\"LatoWeb\",\"fontStyle\":\"bold\",\"isXCentered\":false}},{\"id\":4,\"type\":\"SENTENCE\",\"payload\":{\"x\":424,\"y\":360,\"sentences\":\"HeRe :)\",\"lineHeigth\":20,\"color\":\"#417505\",\"fontSize\":\"119\",\"fontCat\":\"LatoWeb\",\"fontStyle\":\"bold\",\"isXCentered\":false}}];\nexport default elements;","import React from \"react\";\nimport CV from './CV.jsx';\nimport Types from '../utils/Types';\nimport {makeSentence, makeBulletSentences} from '../utils/SentenceMaker';\nimport Sentence from './Sentence';\nimport BulletSentences from './BulletSentences';\nimport cvJson from './../static/cvJson';\n\nconst elementBlackListedKeys = [\"reff\"]\n\nexport default class DashBoard extends React.Component{\n    constructor(props){\n        super(props);\n        cvJson.forEach(jsonObj => {\n            jsonObj.reff = React.createRef();\n        });\n        this.state = {\n            elements : cvJson\n        }\n\n        this.addElement = this.addElement.bind(this);\n        this.updatePayload = this.updatePayload.bind(this);\n        this.delete = this.delete.bind(this);\n        this.mouseClickedOn = this.mouseClickedOn.bind(this);\n        this.exportCV = this.exportCV.bind(this);\n    }\n\n    exportCV(){\n        console.log(this.state.elements);\n        let obj = this.state.elements;\n        // let stringified = JSON.stringify(obj);\n        let stringified = JSON.stringify(obj, (key, value) => {\n            console.log(\"value\" , value, \"key\", key )\n            if(!elementBlackListedKeys.includes(key)){\n                return value;\n            }\n            else {\n                return;\n            };\n            // console.log(\"value\" , value, \"key\", key )\n            // return value;\n        });\n        console.log(stringified);\n        copyTextToClipboard(stringified);\n    }\n\n    addElement(type){\n        let elements = this.state.elements;\n        let id = this.state.elements.length;\n        if(type === Types.BULLET_PARA){\n            let element = {\n                id : id,\n                type: Types.BULLET_PARA,\n                reff: React.createRef(),\n                payload: {\n                    x: 10,\n                    y : 100, \n                    sentences : \"sentence pars\", \n                    lineHeigth : 20, \n                    sentenceHeigth : 20, \n                    color : \"red\", \n                    bulletColor : \"black\", \n                    fontSize : 20, \n                    fontCat : \"LatoWeb\", \n                    fontStyle : \"bold\"\n                }\n            }\n            elements.push(element);\n        }\n        else if(type === Types.SENTENCE){\n            let element = {\n                id : id,\n                type: Types.SENTENCE,\n                reff: React.createRef(),\n                payload: {\n                    x: 10,\n                    y : 200, \n                    sentences : \"sentence\", \n                    lineHeigth : 20, \n                    color : \"red\", \n                    fontSize : 20, \n                    fontCat : \"LatoWeb\", \n                    fontStyle : \"bold\",\n                    isXCentered : false\n                }\n            }\n            elements.push(element);\n        }\n        this.setState({elements:elements});\n    }\n\n    updatePayload(id, payload){\n        let elements = this.state.elements;\n        let index = elements.findIndex((element => element.id == id));\n        elements[index].payload = payload;\n        this.setState({\n            elements : elements\n        });\n    }\n\n    delete(id){\n        let elements = this.state.elements;\n        let index = elements.findIndex((element => element.id == id));\n        elements.splice(index, 1);\n        this.setState({\n            elements : elements\n        });\n    }\n\n    mouseClickedOn(x,y){\n        \n        let closerElement = null;\n        let minDistance = window.innerWidth * 100;\n        this.state.elements.forEach(element => {\n            let distance = Math.sqrt(Math.pow(element.payload.x - x, 2) + Math.pow(element.payload.y - y, 2));\n            console.log(distance);\n            if(distance < minDistance){\n                minDistance = distance;\n                closerElement = element;\n            }\n        });\n        console.log(x,y,closerElement);\n        if(closerElement !== null){\n            closerElement.reff.current.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n            });\n        }\n    }\n\n    render(){\n        let elements = [];\n        this.state.elements.forEach(element => {\n            if(element.type === Types.BULLET_PARA){\n                let payload = element.payload;\n                elements.push(...makeBulletSentences(payload.x, payload.y, payload.sentences, payload.lineHeigth, payload.sentenceHeigth, payload.color, payload.bulletColor, payload.fontSize, payload.fontCat, payload.fontStyle));\n            }\n            if(element.type === Types.SENTENCE){\n                let payload = element.payload;\n                elements.push(...makeSentence(payload.x, payload.y, payload.sentences, payload.lineHeigth, payload.color, payload.fontSize, payload.fontCat, payload.fontStyle, payload.isXCentered));\n            }\n        });\n        let width = window.innerWidth;\n        let height = window.innerHeight;\n        width = width - 100;\n        console.log(width)\n        return(\n            <div style={{ margin: \"20px\" }}>\n\n                <div style = {{width : width + \"px\", height: height/2 + \"px\", overflowY:\"auto\", margin: \"20px\"}}>\n                    <CV elements={elements} mouseClickedOn = {this.mouseClickedOn}/>\n                </div>\n                <div>\n                        <button style={{ margin: \"20px\" }} className=\"btn btn-primary\" onClick = {() => this.addElement(Types.SENTENCE)}>Sentence</button>\n                        <button style={{ margin: \"20px\" }} className=\"btn btn-primary\" onClick = {() => this.addElement(Types.BULLET_PARA)}>Bullet Sentences</button>\n                        <button style={{ margin: \"20px\" }} className=\"btn btn-primary\" onClick = {() => this.exportCV()}>Export as json</button>\n                        \n                    </div>\n                <div style = {{width : width + \"px\", height: height/2 - 160 + \"px\", overflowY:\"auto\"}}>\n                    \n                    <div>\n                        {this.state.elements.reverse().map(element => {\n                            // if(element.type === Types.SENTENCE){\n                                return (<Sentence key={element.id} reff={element.reff} index={element.id} type = {element.type} payload = {element.payload} updatePayload = {this.updatePayload} delete = {this.delete}/>);\n                            // }\n                            // else if(element.type === Types.BULLET_PARA){\n                            //     return (<BulletSentences key= {element.id} index={element.id} payload = {element.payload} updatePayload = {this.updatePayload}/>);\n                            // }\n                        })}\n                        \n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nfunction fallbackCopyTextToClipboard(text) {\n  var textArea = document.createElement(\"textarea\");\n  textArea.value = text;\n  \n  // Avoid scrolling to bottom\n  textArea.style.top = \"0\";\n  textArea.style.left = \"0\";\n  textArea.style.position = \"fixed\";\n\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  try {\n    var successful = document.execCommand('copy');\n    var msg = successful ? 'successful' : 'unsuccessful';\n    console.log('Fallback: Copying text command was ' + msg);\n  } catch (err) {\n    console.error('Fallback: Oops, unable to copy', err);\n  }\n\n  document.body.removeChild(textArea);\n}\nfunction copyTextToClipboard(text) {\n  if (!navigator.clipboard) {\n    fallbackCopyTextToClipboard(text);\n    return;\n  }\n  navigator.clipboard.writeText(text).then(function() {\n    console.log('Async: Copying to clipboard was successful!');\n    alert(\"Copied to clipboard\")\n  }, function(err) {\n    console.error('Async: Could not copy text: ', err);\n  });\n}","import React from 'react';\nimport DashBoard from './Components/DashBoard';\nimport {makeSentence, makeBulletSentence, makeBulletSentences} from './utils/SentenceMaker';\n\n\nfunction App() {\n  // elements.push(...makeSentence(150, 20, \"Sentence\\nSecond sentence\", 10, \"red\", 10, \"LatoWeb\", \"bold\"));\n  \n  // elements.push(...makeBulletSentences(150, 150, \"Sentence*s*Second sentence with new line*s*Second sentence\", 10, 20, \"red\", \"black\", 10, \"LatoWeb\", \"bold\"));\n  \n  return (\n    <div>\n      <DashBoard/>\n    </div>\n  );\n}\n\nexport default App;\n// (x, y, sentence, lineHeigth, color, fontSize, fontCat, fontStyle)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}